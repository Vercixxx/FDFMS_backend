# Generated by Django 5.0.1 on 2024-02-21 09:49

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('other', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('user_role', models.CharField(choices=[('HR', 'HR'), ('Payroll', 'Payroll'), ('Asset', 'Asset'), ('Clients', 'Clients'), ('Manager', 'Manager'), ('Driver', 'Driver'), ('Administrator', 'Administrator')], default='Administrator', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=30, null=True)),
                ('pesel_nip', models.CharField(blank=True, max_length=12, null=True)),
                ('tax_office_name', models.CharField(blank=True, max_length=80, null=True)),
                ('tax_office_address', models.CharField(blank=True, max_length=220, null=True)),
                ('nfz', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('username', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('residence_city', models.CharField(blank=True, max_length=100, null=True)),
                ('residence_street', models.CharField(blank=True, max_length=200, null=True)),
                ('residence_home_number', models.CharField(blank=True, max_length=10, null=True)),
                ('residence_apartment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('residence_zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('registered_city', models.CharField(blank=True, max_length=100, null=True)),
                ('registered_street', models.CharField(blank=True, max_length=200, null=True)),
                ('registered_home_number', models.CharField(blank=True, max_length=10, null=True)),
                ('registered_apartment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('registered_zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('correspondence_city', models.CharField(blank=True, max_length=100, null=True)),
                ('correspondence_street', models.CharField(blank=True, max_length=200, null=True)),
                ('correspondence_home_number', models.CharField(blank=True, max_length=10, null=True)),
                ('correspondence_apartment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('correspondence_zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('correspondence_country', models.ForeignKey(db_column='correspondence_country', on_delete=django.db.models.deletion.CASCADE, related_name='correspondence_addresses', to='other.country')),
                ('correspondence_state', models.ForeignKey(db_column='correspondence_state', on_delete=django.db.models.deletion.CASCADE, related_name='correspondence_addresses', to='other.state')),
                ('registered_country', models.ForeignKey(db_column='registered_country', on_delete=django.db.models.deletion.CASCADE, related_name='registered_addresses', to='other.country')),
                ('registered_state', models.ForeignKey(db_column='registered_state', on_delete=django.db.models.deletion.CASCADE, related_name='registered_addresses', to='other.state')),
                ('residence_country', models.ForeignKey(db_column='residence_country', on_delete=django.db.models.deletion.CASCADE, related_name='residence_addresses', to='other.country')),
                ('residence_state', models.ForeignKey(db_column='residence_state', on_delete=django.db.models.deletion.CASCADE, related_name='residence_addresses', to='other.state')),
            ],
        ),
    ]
